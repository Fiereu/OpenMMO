/*
 * This file is generated by jOOQ.
 */
package de.fiereu.openmmo.db.jooq.tables.records;


import de.fiereu.openmmo.db.jooq.tables.ServerPermission;

import org.jooq.Record2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class ServerPermissionRecord extends UpdatableRecordImpl<ServerPermissionRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.server_permission.server_id</code>.
     */
    public void setServerId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.server_permission.server_id</code>.
     */
    public Integer getServerId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.server_permission.permission_id</code>.
     */
    public void setPermissionId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.server_permission.permission_id</code>.
     */
    public Integer getPermissionId() {
        return (Integer) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<Integer, Integer> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ServerPermissionRecord
     */
    public ServerPermissionRecord() {
        super(ServerPermission.SERVER_PERMISSION);
    }

    /**
     * Create a detached, initialised ServerPermissionRecord
     */
    public ServerPermissionRecord(Integer serverId, Integer permissionId) {
        super(ServerPermission.SERVER_PERMISSION);

        setServerId(serverId);
        setPermissionId(permissionId);
        resetChangedOnNotNull();
    }
}
